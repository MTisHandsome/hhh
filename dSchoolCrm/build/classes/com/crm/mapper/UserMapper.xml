<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.crm.mapper.UserMapper">
	<resultMap id="BaseResultMap" type="com.crm.bean.User">
		<id column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="user_name" property="userName"
			jdbcType="VARCHAR" />
		<result column="user_emal" property="userEmal"
			jdbcType="VARCHAR" />
		<result column="user_password" property="userPassword"
			jdbcType="VARCHAR" />
		<result column="user_sex" property="userSex" jdbcType="VARCHAR" />
		<result column="user_date" property="userDate"
			jdbcType="VARCHAR" />
		<result column="user_schedule" property="userSchedule"
			jdbcType="INTEGER" />
		<result column="tea_userid" property="teaUserid"
			jdbcType="INTEGER" />
		<result column="car_id" property="carId" jdbcType="INTEGER" />
		<result column="school_id" property="schoolId" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		user_id, user_name, user_emal, user_password, user_sex,
		user_date,
		user_schedule,
		tea_userid, car_id,school_id
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.crm.bean.UserExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user
		where user_id = #{userId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from user
		where user_id =
		#{userId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.crm.bean.UserExample">
		delete from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.crm.bean.User">
		insert into user (user_id,
		user_name, user_emal,
		user_password, user_sex, user_date,
		user_schedule, tea_userid, car_id
		)
		values (#{userId,jdbcType=INTEGER},
		#{userName,jdbcType=VARCHAR},
		#{userEmal,jdbcType=VARCHAR},
		#{userPassword,jdbcType=VARCHAR}, #{userSex,jdbcType=VARCHAR},
		#{userDate,jdbcType=VARCHAR},
		#{userSchedule,jdbcType=INTEGER},
		#{teaUserid,jdbcType=INTEGER},
		#{carId,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.crm.bean.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="userEmal != null">
				user_emal,
			</if>
			<if test="userPassword != null">
				user_password,
			</if>
			<if test="userSex != null">
				user_sex,
			</if>
			<if test="userDate != null">
				user_date,
			</if>
			<if test="userSchedule != null">
				user_schedule,
			</if>
			<if test="teaUserid != null">
				tea_userid,
			</if>
			<if test="carId != null">
				car_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="userEmal != null">
				#{userEmal,jdbcType=VARCHAR},
			</if>
			<if test="userPassword != null">
				#{userPassword,jdbcType=VARCHAR},
			</if>
			<if test="userSex != null">
				#{userSex,jdbcType=VARCHAR},
			</if>
			<if test="userDate != null">
				#{userDate,jdbcType=VARCHAR},
			</if>
			<if test="userSchedule != null">
				#{userSchedule,jdbcType=INTEGER},
			</if>
			<if test="teaUserid != null">
				#{teaUserid,jdbcType=INTEGER},
			</if>
			<if test="carId != null">
				#{carId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.crm.bean.UserExample"
		resultType="java.lang.Integer">
		select count(*) from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update user
		<set>
			<if test="record.userId != null">
				user_id = #{record.userId,jdbcType=INTEGER},
			</if>
			<if test="record.userName != null">
				user_name = #{record.userName,jdbcType=VARCHAR},
			</if>
			<if test="record.userEmal != null">
				user_emal = #{record.userEmal,jdbcType=VARCHAR},
			</if>
			<if test="record.userPassword != null">
				user_password = #{record.userPassword,jdbcType=VARCHAR},
			</if>
			<if test="record.userSex != null">
				user_sex = #{record.userSex,jdbcType=VARCHAR},
			</if>
			<if test="record.userDate != null">
				user_date = #{record.userDate,jdbcType=VARCHAR},
			</if>
			<if test="record.userSchedule != null">
				user_schedule = #{record.userSchedule,jdbcType=INTEGER},
			</if>
			<if test="record.teaUserid != null">
				tea_userid = #{record.teaUserid,jdbcType=INTEGER},
			</if>
			<if test="record.carId != null">
				car_id = #{record.carId,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update user
		set user_id = #{record.userId,jdbcType=INTEGER},
		user_name =
		#{record.userName,jdbcType=VARCHAR},
		user_emal =
		#{record.userEmal,jdbcType=VARCHAR},
		user_password =
		#{record.userPassword,jdbcType=VARCHAR},
		user_sex =
		#{record.userSex,jdbcType=VARCHAR},
		user_date =
		#{record.userDate,jdbcType=VARCHAR},
		user_schedule =
		#{record.userSchedule,jdbcType=INTEGER},
		tea_userid =
		#{record.teaUserid,jdbcType=INTEGER},
		car_id =
		#{record.carId,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.crm.bean.User">
		update user
		<set>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="userEmal != null">
				user_emal = #{userEmal,jdbcType=VARCHAR},
			</if>
			<if test="userPassword != null">
				user_password = #{userPassword,jdbcType=VARCHAR},
			</if>
			<if test="userSex != null">
				user_sex = #{userSex,jdbcType=VARCHAR},
			</if>
			<if test="userDate != null">
				user_date = #{userDate,jdbcType=VARCHAR},
			</if>
			<if test="userSchedule != null">
				user_schedule = #{userSchedule,jdbcType=INTEGER},
			</if>
			<if test="teaUserid != null">
				tea_userid = #{teaUserid,jdbcType=INTEGER},
			</if>
			<if test="carId != null">
				car_id = #{carId,jdbcType=INTEGER},
			</if>
		</set>
		where user_id = #{userId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.crm.bean.User">
		update user
		set user_name = #{userName,jdbcType=VARCHAR},
		user_emal = #{userEmal,jdbcType=VARCHAR},
		user_password =
		#{userPassword,jdbcType=VARCHAR},
		user_sex =
		#{userSex,jdbcType=VARCHAR},
		user_date = #{userDate,jdbcType=VARCHAR},
		user_schedule = #{userSchedule,jdbcType=INTEGER},
		tea_userid =
		#{teaUserid,jdbcType=INTEGER},
		car_id = #{carId,jdbcType=INTEGER},
		school_id = #{schoolId,jdbcType=INTEGER}
		where
		user_id = #{userId,jdbcType=INTEGER}
	</update>

	<delete id="delUsers">
		delete from user where user_id in
		<foreach item="ids" collection="array" index="no" open="("
			separator="," close=")">
			#{ids}
		</foreach>
	</delete>

	<select id="allUser" resultMap="BaseResultMap">
		SELECT * FROM USER WHERE school_id IS NULL
	</select>

	<resultMap id="userschool" type="com.crm.bean.User">
		<id column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="user_name" property="userName"
			jdbcType="VARCHAR" />
		<result column="user_emal" property="userEmal"
			jdbcType="VARCHAR" />
		<result column="user_password" property="userPassword"
			jdbcType="VARCHAR" />
		<result column="user_sex" property="userSex" jdbcType="VARCHAR" />
		<result column="user_date" property="userDate"
			jdbcType="VARCHAR" />
		<result column="user_schedule" property="userSchedule"
			jdbcType="INTEGER" />
		<result column="tea_userid" property="teaUserid"
			jdbcType="INTEGER" />
		<result column="car_id" property="carId" jdbcType="INTEGER" />
		<result column="school_id" property="schoolId" jdbcType="INTEGER" />
		<association property="school" javaType="school">
			<id property="schoolId" column="school_id" />
    		<result property="schoolName" column="school_name" jdbcType="VARCHAR" />
		</association>
	</resultMap>



	<select id="isNotNull" resultMap="all">
		SELECT * FROM USER u LEFT JOIN school s ON s.`school_id`=u.`school_id` LEFT JOIN tea t ON u.`tea_userid` = t.tea_id LEFT JOIN car c ON u.`car_id`= c.car_id  WHERE u.`school_id` IS NOT NULL
	</select>


	<resultMap type="user" id="all">
		<id column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="user_name" property="userName"
			jdbcType="VARCHAR" />
		<result column="user_emal" property="userEmal"
			jdbcType="VARCHAR" />
		<result column="user_password" property="userPassword"
			jdbcType="VARCHAR" />
		<result column="user_sex" property="userSex" jdbcType="VARCHAR" />
		<result column="user_date" property="userDate"
			jdbcType="VARCHAR" />
		<result column="user_schedule" property="userSchedule"
			jdbcType="INTEGER" />
		<result column="tea_userid" property="teaUserid"
			jdbcType="INTEGER" />
		<result column="car_id" property="carId" jdbcType="INTEGER" />
		<result column="school_id" property="schoolId" jdbcType="INTEGER" />
		
		<association property="tea" javaType="com.crm.bean.Tea">
			<id property="teaId" column="tea_userid" />
			<result column="tea_name" property="teaName"
				jdbcType="VARCHAR" />
			<result column="tea_sex" property="teaSex" jdbcType="VARCHAR" />
			<result column="tea_phone" property="teaPhone"
				jdbcType="VARCHAR" />
			<result column="tea_class" property="teaClass"
				jdbcType="INTEGER" />
			<result column="tea_year" property="teaYear"
				jdbcType="INTEGER" />
		</association>

		<association property="car" javaType="com.crm.bean.Car">
			<id property="carId" column="car_id" />
			<result column="car_card" property="carCard"
				jdbcType="VARCHAR" />
			<result column="car_shape" property="carShape"
				jdbcType="VARCHAR" />
			<result column="repair_id" property="repairId"
				jdbcType="INTEGER" />
		</association>
		
		<association property="school" javaType="school">
			<id property="schoolId" column="school_id" />
    		<result property="schoolName" column="school_name" jdbcType="VARCHAR" />
		</association>
	</resultMap>



	<select id="all" resultMap="all">
		SELECT * FROM USER u LEFT JOIN tea t
		ON u.tea_userid = t.tea_id LEFT JOIN car c ON u.car_id = c.`car_id`
		WHERE u.tea_userid IS NOT NULL AND u.car_id IS NOT NULL
	</select>

	<select id="selectAll" resultMap="all"
		parameterType="java.lang.Integer">
		SELECT * FROM USER u LEFT JOIN tea t ON u.tea_userid =
		t.tea_id LEFT JOIN car c ON u.car_id = c.`car_id` WHERE u.tea_userid
		IS NOT NULL AND u.car_id IS NOT NULL AND user_id = #{id}
	</select>

	<update id="upteaId" parameterType="java.lang.Integer">
		UPDATE USER SET tea_userid = NULL WHERE user_id = #{id}
	</update>
	
	<update id="upcarId" parameterType="java.lang.Integer">
		UPDATE USER SET car_id = NULL WHERE user_id = #{id}
	</update>
	
	<resultMap id="UserScore" type="com.crm.bean.User">
		<id column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="user_emal" property="userEmal" jdbcType="VARCHAR" />
		<result column="user_password" property="userPassword" jdbcType="VARCHAR" />
		<result column="user_sex" property="userSex" jdbcType="VARCHAR" />
		<result column="user_date" property="userDate" jdbcType="VARCHAR" />
		<result column="user_schedule" property="userSchedule" jdbcType="INTEGER" />
		<result column="tea_userid" property="teaUserid" jdbcType="INTEGER" />
		<result column="car_id" property="carId" jdbcType="INTEGER" />
			<collection property="scores" javaType="list" ofType="score">
				<id property="userId" column="oid"/>
				<result column="score_id" property="scoreId" jdbcType="INTEGER" />
				<result column="score_schedule" property="scoreSchedule" jdbcType="INTEGER" />
   				<result column="score_text" property="scoreText" jdbcType="VARCHAR" />    			
			</collection>
	</resultMap>
	<select id="selUserScore" resultMap="UserScore" parameterType="java.lang.Integer">
		SELECT * FROM USER u LEFT JOIN score s ON u.`user_id`=s.`user_id` WHERE u.`user_id` = #{id}
	</select>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.crm.mapper.TeaMapper">
	<resultMap id="BaseResultMap" type="com.crm.bean.Tea">
		<id column="tea_id" property="teaId" jdbcType="INTEGER" />
		<result column="tea_name" property="teaName" jdbcType="VARCHAR" />
		<result column="tea_sex" property="teaSex" jdbcType="VARCHAR" />
		<result column="tea_phone" property="teaPhone"
			jdbcType="VARCHAR" />
		<result column="tea_class" property="teaClass"
			jdbcType="INTEGER" />
		<result column="tea_year" property="teaYear" jdbcType="INTEGER" />
		<result column="school_id" property="schoolId"
			jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		tea_id, tea_name, tea_sex, tea_phone, tea_class,
		tea_year,school_id
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.crm.bean.TeaExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from tea
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from tea
		where tea_id = #{teaId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from tea
		where tea_id = #{teaId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.crm.bean.TeaExample">
		delete from tea
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.crm.bean.Tea">
		insert into tea (tea_id,
		tea_name, tea_sex,
		tea_phone, tea_class, tea_year,school_id
		)
		values
		(#{teaId,jdbcType=INTEGER}, #{teaName,jdbcType=VARCHAR},
		#{teaSex,jdbcType=VARCHAR},
		#{teaPhone,jdbcType=VARCHAR},
		#{teaClass,jdbcType=INTEGER},
		#{teaYear,jdbcType=INTEGER},#{schoolId,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.crm.bean.Tea">
		insert into tea
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="teaId != null">
				tea_id,
			</if>
			<if test="teaName != null">
				tea_name,
			</if>
			<if test="teaSex != null">
				tea_sex,
			</if>
			<if test="teaPhone != null">
				tea_phone,
			</if>
			<if test="teaClass != null">
				tea_class,
			</if>
			<if test="teaYear != null">
				tea_year,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="teaId != null">
				#{teaId,jdbcType=INTEGER},
			</if>
			<if test="teaName != null">
				#{teaName,jdbcType=VARCHAR},
			</if>
			<if test="teaSex != null">
				#{teaSex,jdbcType=VARCHAR},
			</if>
			<if test="teaPhone != null">
				#{teaPhone,jdbcType=VARCHAR},
			</if>
			<if test="teaClass != null">
				#{teaClass,jdbcType=INTEGER},
			</if>
			<if test="teaYear != null">
				#{teaYear,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.crm.bean.TeaExample" resultType="java.lang.Integer">
		select count(*) from tea
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update tea
		<set>
			<if test="record.teaId != null">
				tea_id = #{record.teaId,jdbcType=INTEGER},
			</if>
			<if test="record.teaName != null">
				tea_name = #{record.teaName,jdbcType=VARCHAR},
			</if>
			<if test="record.teaSex != null">
				tea_sex = #{record.teaSex,jdbcType=VARCHAR},
			</if>
			<if test="record.teaPhone != null">
				tea_phone = #{record.teaPhone,jdbcType=VARCHAR},
			</if>
			<if test="record.teaClass != null">
				tea_class = #{record.teaClass,jdbcType=INTEGER},
			</if>
			<if test="record.teaYear != null">
				tea_year = #{record.teaYear,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update tea
		set tea_id = #{record.teaId,jdbcType=INTEGER},
		tea_name =
		#{record.teaName,jdbcType=VARCHAR},
		tea_sex =
		#{record.teaSex,jdbcType=VARCHAR},
		tea_phone =
		#{record.teaPhone,jdbcType=VARCHAR},
		tea_class =
		#{record.teaClass,jdbcType=INTEGER},
		tea_year =
		#{record.teaYear,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.crm.bean.Tea">
		update tea
		<set>
			<if test="teaName != null">
				tea_name = #{teaName,jdbcType=VARCHAR},
			</if>
			<if test="teaSex != null">
				tea_sex = #{teaSex,jdbcType=VARCHAR},
			</if>
			<if test="teaPhone != null">
				tea_phone = #{teaPhone,jdbcType=VARCHAR},
			</if>
			<if test="teaClass != null">
				tea_class = #{teaClass,jdbcType=INTEGER},
			</if>
			<if test="teaYear != null">
				tea_year = #{teaYear,jdbcType=INTEGER},
			</if>
			<if test="schoolId != null">
				school_id = #{schoolId,jdbcType=INTEGER},
			</if>
		</set>
		where tea_id = #{teaId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.crm.bean.Tea">
		update tea
		set
		tea_name = #{teaName,jdbcType=VARCHAR},
		tea_sex =
		#{teaSex,jdbcType=VARCHAR},
		tea_phone = #{teaPhone,jdbcType=VARCHAR},
		tea_class = #{teaClass,jdbcType=INTEGER},
		tea_year =
		#{teaYear,jdbcType=INTEGER},
		school_id = #{schoolId,jdbcType=INTEGER}
		where tea_id = #{teaId,jdbcType=INTEGER}
	</update>

	<delete id="delAll">
		delete from tea where tea_id in
		<foreach item="ids" collection="array" index="no" open="("
			separator="," close=")">
			#{ids}
		</foreach>
	</delete>

	<resultMap id="teauser" type="com.crm.bean.Tea">
		<id column="tea_id" property="teaId" jdbcType="INTEGER" />
		<result column="tea_name" property="teaName" jdbcType="VARCHAR" />
		<result column="tea_sex" property="teaSex" jdbcType="VARCHAR" />
		<result column="tea_phone" property="teaPhone"
			jdbcType="VARCHAR" />
		<result column="tea_class" property="teaClass"
			jdbcType="INTEGER" />
		<result column="tea_year" property="teaYear" jdbcType="INTEGER" />
		<result column="school_id" property="schoolId"
			jdbcType="INTEGER" />
		<collection property="users" javaType="list" ofType="user">
			<id property="teaUserid" column="oid" />
			<result column="user_id" property="userId" jdbcType="INTEGER" />
			<result column="user_name" property="userName"
				jdbcType="VARCHAR" />
			<result column="user_emal" property="userEmal"
				jdbcType="VARCHAR" />
			<result column="user_password" property="userPassword"
				jdbcType="VARCHAR" />
			<result column="user_sex" property="userSex"
				jdbcType="VARCHAR" />
			<result column="user_date" property="userDate"
				jdbcType="VARCHAR" />
			<result column="user_schedule" property="userSchedule"
				jdbcType="INTEGER" />
			<result column="tea_userid" property="teaUserid"
				jdbcType="INTEGER" />
			<result column="car_id" property="carId" jdbcType="INTEGER" />
		</collection>
	</resultMap>
	<select id="queryTeaUser" parameterType="java.lang.Integer"
		resultMap="teauser">
		SELECT * FROM tea t LEFT JOIN USER u ON t.`tea_id` =
		u.`tea_userid` WHERE t.`tea_id` = #{id}
	</select>
	<resultMap id="teaschool" type="com.crm.bean.Tea">
		<id column="tea_id" property="teaId" jdbcType="INTEGER" />
		<result column="tea_name" property="teaName" jdbcType="VARCHAR" />
		<result column="tea_sex" property="teaSex" jdbcType="VARCHAR" />
		<result column="tea_phone" property="teaPhone"
			jdbcType="VARCHAR" />
		<result column="tea_class" property="teaClass"
			jdbcType="INTEGER" />
		<result column="tea_year" property="teaYear" jdbcType="INTEGER" />
		<result column="school_id" property="schoolId"
			jdbcType="INTEGER" />

		<association property="school" javaType="school">
			<id property="schoolId" column="school_id" />
			<result property="schoolName" column="school_name"
				jdbcType="VARCHAR" />
		</association>
	</resultMap>

	<select id="selteaschool" resultMap="teaschool">
		SELECT * FROM tea t LEFT
		JOIN school s ON t.`school_id`=s.`school_id` order by t.tea_id ASC
	</select>

	<select id="queryschool" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		SELECT * FROM tea WHERE school_id = #{id}
	</select>
</mapper>